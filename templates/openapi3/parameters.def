{{= data.tags.section }}
{{ for (var p of data.parameters) {
    var restrictions = [];
    var enums = {};
    if ("pattern" in p.schema) {
        let pattern = p.schema.pattern
             .replace(/&/g, "&amp;")
             .replace(/</g, "&lt;")
             .replace(/>/g, "&gt;")
             .replace(/"/g, "&quot;")
             .replace(/'/g, "&#039;");
        restrictions.push("<li>Regex: <code>" + pattern + "</code></li>");
    }
    if ("minimum" in p.schema) {
        restrictions.push("<li>Minimum: " + p.schema.minimum + "</li>");
    }
    if ("maximum" in p.schema) {
        restrictions.push("<li>Maximum: " + p.schema.maximum + "</li>");
    }
    if (restrictions.length > 0) {
        p.restrictions = "<ul style=\" padding-inline-start: 0;margin-block-start: 0em;\">";
        for (var k in restrictions) {
            p.restrictions += restrictions[k];
        }
        p.restrictions += "</ul>";
    }
   if (p.schema && p.schema.enum) {
     for (var e of p.schema.enum) {
       if (!(p.name in enums)) {
         enums[p.name] = []
       }
       enums[p.name].push(e);
     }
   }
}
}}


{{? data.hasBodyParam == true}}
<h3 id="{{=data.operationUniqueSlug}}-body">Body Parameters</h3>

{{? data.body_param}}
Model: {{=data.body_param.safeType}}
{{?}}
|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
{{~ data.parameters :p}}{{?p.in == "body" && p.name != "body" && p.name != "Â» **additionalProperties**" }}|<span style="white-space: nowrap;">{{=p.name}}</span>|{{=p.schema.type}}|{{=p.required}}|{{=p.restrictions||'none'}}|{{
    if (p.schema.type != "$ref") {
        }}{{=data.utils.join(p.description||'none')}}{{
    } else {
        }} {{=p.shortDesc}}{{
    }
}}|
{{?}}{{~}}

{{?}}

{{? data.hasQueryParam == true}}
<h3 id="{{=data.operationUniqueSlug}}-body">Query Parameters</h3>

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
{{~ data.parameters :p}}{{?p.in == "query"}}|<span style="white-space: nowrap;">{{=p.name}}</span>|{{=p.schema.type}}|{{=p.required}}|{{=p.restrictions||'none'}}|{{=data.utils.join(p.description||'none')}}|
{{?}}{{~}}
{{?}}

{{? data.hasPathParam == true}}
<h3 id="{{=data.operationUniqueSlug}}-body">Path Parameters</h3>

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
{{~ data.parameters :p}}{{?p.in == "path"}}|<span style="white-space: nowrap;">{{=p.name}}</span>|{{=p.schema.type}}|{{=p.required}}|{{=p.restrictions||'none'}}|{{=data.utils.join(p.description||'none')}}|
{{?}}{{~}}
{{?}}

{{~ data.parameters :p}}

{{? p.schema && p.schema.enum }}
{{~ p.schema.enum :e}}
{{ var entry = {}; entry.name = p.name; entry.value = e; data.enums.push(entry); }}
{{~}}
{{?}}

{{? p.schema && p.schema.items && p.schema.items.enum }}
{{~ p.schema.items.enum :e}}
{{ var entry = {}; entry.name = p.name; entry.value = e; data.enums.push(entry); }}
{{~}}
{{?}}

{{~}}

{{? Object.entries(enums).length > 0 }}
{{= data.tags.section }}

#### Enumerated Values

|Enum|Values|
|---|---|
{{ for (var e in enums) { }}|{{=e}}|<ul>{{~enums[e] :val}}<li>{{=val}}</li>{{~}}</ul>|
{{ } }}

{{= data.tags.endSection }}
{{?}}
{{= data.tags.endSection }}
